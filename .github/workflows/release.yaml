name: Release on tag

on:
    push:
        tags:
            - "v*"

jobs:
    build-and-release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: Install deps
              run: bun install --frozen-lockfile

            - name: Build all targets
              run: |
                  set -euo pipefail
                  mkdir -p dist

                  # Matrix of targets and output filenames
                  build() {
                    target="$1"
                    outfile="$2"
                    echo "Building $target -> $outfile"
                    bun build --compile --target="$target" ./index.ts --outfile "dist/$outfile"
                  }

                  # Linux glibc
                  build bun-linux-x64        capp-linux-amd64
                  build bun-linux-arm64      capp-linux-arm64
                  # Linux musl (often best for static-like portability in containers/distros like Alpine)
                  build bun-linux-x64-musl   capp-linux-amd64-musl
                  build bun-linux-arm64-musl capp-linux-arm64-musl

                  # macOS
                  build bun-darwin-x64       capp-macos-amd64
                  build bun-darwin-arm64     capp-macos-arm64

                  # Windows (x64 only; .exe extension is added automatically if omitted, but we add it explicitly)
                  build bun-windows-x64      capp-windows-amd64.exe

                  # Make Unix binaries executable
                  chmod +x dist/* || true

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                  files: dist/*
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
